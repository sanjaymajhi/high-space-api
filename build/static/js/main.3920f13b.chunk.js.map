{"version":3,"sources":["components/Context.jsx","components/addCust.jsx","components/addAddress.jsx","components/landingPage.jsx","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","custList","payload","selectedCust","addressList","addCustModal","addAddressModal","customer","address","initialState","f_name","l_name","age","Number","sex","cust_id","h_no","s_no","city","ContextProvider","children","useReducer","dispatch","Provider","value","Consumer","AddCust","props","ctx","useContext","Modal","show","onHide","size","aria-labelledby","centered","Header","Title","Body","Alert","variant","style","display","id","Form","onChange","e","name","target","onSubmit","preventDefault","headers","Headers","append","fetch","method","body","JSON","stringify","then","res","a","ok","Error","statusText","fetchCustList","catch","err","alert","document","getElementById","innerHTML","Row","Col","Group","controlId","Label","Control","placeholder","required","Button","AddAddress","console","log","LandingPage","json","data","list","useEffect","onClick","map","cust","index","key","backgroundColor","color","parentNode","fetchAddressList","_id","disabled","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3920f13b.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\n\nconst Context = React.createContext();\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"setCustList\":\n      return { ...state, custList: action.payload };\n    case \"setSelectedCust\":\n      return { ...state, selectedCust: action.payload };\n    case \"setAddressList\":\n      return { ...state, addressList: action.payload };\n    case \"setAddCustModal\":\n      return { ...state, addCustModal: action.payload };\n    case \"setAddAddressModal\":\n      return { ...state, addAddressModal: action.payload };\n    case \"setCustomer\":\n      return { ...state, customer: { ...state.customer, ...action.payload } };\n    case \"setAddress\":\n      return { ...state, address: { ...state.address, ...action.payload } };\n    default:\n      return state;\n  }\n}\n\nconst initialState = {\n  custList: [],\n  selectedCust: \"\",\n  addressList: [],\n  customer: {\n    f_name: \"\",\n    l_name: \"\",\n    age: Number,\n    sex: \"\",\n  },\n  address: {\n    cust_id: \"\",\n    h_no: \"\",\n    s_no: Number,\n    city: \"\",\n    state: \"\",\n  },\n  addCustModal: false,\n  addAddressModal: false,\n};\n\nexport function ContextProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <Context.Provider value={{ ...state, dispatch }}>\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport const ContextConsumer = Context.Consumer;\n\nexport default Context;\n","import React, { useContext } from \"react\";\nimport { Modal, Form, Button, Row, Col, Alert } from \"react-bootstrap\";\nimport Context from \"./Context\";\n\nfunction AddCust(props) {\n  const ctx = useContext(Context);\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    ctx.dispatch({ type: \"setCustomer\", payload: { [name]: value } });\n  };\n\n  const handleCloseAddCustModal = () => {\n    ctx.dispatch({ type: \"setAddCustModal\", payload: false });\n  };\n\n  const add_cust = (e) => {\n    e.preventDefault();\n    const headers = new Headers();\n    headers.append(\"content-type\", \"application/json\");\n\n    fetch(\"/api/add_cust\", {\n      method: \"post\",\n      body: JSON.stringify(ctx.customer),\n      headers: headers,\n    })\n      .then(async (res) => {\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n      })\n      .then(() => {\n        props.fetchCustList(props.cust_id);\n        ctx.dispatch({ type: \"setAddCustModal\", payload: false });\n      })\n      .catch((err) => {\n        const alert = document.getElementById(\"add-alert\");\n        alert.style.display = \"block\";\n        alert.innerHTML = err;\n      });\n  };\n\n  return (\n    <Modal\n      show={ctx.addCustModal}\n      onHide={handleCloseAddCustModal}\n      {...props}\n      size=\"md\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header>\n        <Modal.Title>Add Customer</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Alert\n          variant={\"danger\"}\n          style={{ display: \"none\" }}\n          id=\"add-alert\"\n        ></Alert>\n        <Form onChange={handleChange} onSubmit={add_cust}>\n          <Row>\n            <Col>\n              <Form.Group controlId=\"formBasicFirstName\">\n                <Form.Label>First Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter First Name\"\n                  name=\"f_name\"\n                  required={true}\n                />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId=\"formBasicLastName\">\n                <Form.Label>Last Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Last Name\"\n                  name=\"l_name\"\n                  required={true}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group controlId=\"formBasicSex\">\n                <Form.Label>Sex</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Sex (M/F/O)\"\n                  name=\"sex\"\n                  required={true}\n                />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId=\"formBasicAge\">\n                <Form.Label>Age</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Add Your Age\"\n                  name=\"age\"\n                  required={true}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Add\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default AddCust;\n","import React, { useContext } from \"react\";\nimport { Modal, Form, Button, Row, Col, Alert } from \"react-bootstrap\";\nimport Context from \"./Context\";\n\nfunction AddAddress(props) {\n  const ctx = useContext(Context);\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    console.log(name, value);\n    ctx.dispatch({ type: \"setAddress\", payload: { [name]: value } });\n  };\n\n  const handleCloseAddAddressModal = () => {\n    ctx.dispatch({ type: \"setAddAddressModal\", payload: false });\n  };\n\n  const add_address = (e) => {\n    e.preventDefault();\n    const headers = new Headers();\n    headers.append(\"content-type\", \"application/json\");\n    fetch(\"/api/add_address\", {\n      method: \"post\",\n      body: JSON.stringify(ctx.address),\n      headers: headers,\n    })\n      .then(async (res) => {\n        if (!res.ok) {\n          throw new Error(res.statusText);\n        }\n      })\n      .then(() => {\n        ctx.dispatch({\n          type: \"setAddressList\",\n          payload: [...ctx.addressList, ctx.address],\n        });\n        ctx.dispatch({ type: \"setAddAddressModal\", payload: false });\n      })\n      .catch((err) => {\n        const alert = document.getElementById(\"add-alert\");\n        alert.style.display = \"block\";\n        alert.innerHTML = err;\n      });\n  };\n\n  return (\n    <Modal\n      show={ctx.addAddressModal}\n      onHide={handleCloseAddAddressModal}\n      {...props}\n      size=\"md\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header>\n        <Modal.Title>Add Address</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Alert\n          variant={\"danger\"}\n          style={{ display: \"none\" }}\n          id=\"add-alert\"\n        ></Alert>\n        <Form onChange={handleChange} onSubmit={add_address}>\n          <Row>\n            <Col>\n              <Form.Group controlId=\"formBasicH_no\">\n                <Form.Label>House No.</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter House No.\"\n                  name=\"h_no\"\n                  required={true}\n                />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId=\"formBasicS_no\">\n                <Form.Label>Street No.</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Enter Street No.\"\n                  name=\"s_no\"\n                  required={true}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group controlId=\"formBasicCity\">\n                <Form.Label>City</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter City\"\n                  name=\"city\"\n                  required={true}\n                />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId=\"formBasicState\">\n                <Form.Label>State</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Add Your State\"\n                  name=\"state\"\n                  required={true}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Add\n          </Button>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default AddAddress;\n","import React, { useEffect, useContext } from \"react\";\nimport Context from \"./Context\";\nimport AddCust from \"./addCust\";\nimport AddAddress from \"./addAddress\";\n\nfunction LandingPage() {\n  const ctx = useContext(Context);\n\n  const fetchCustList = () => {\n    fetch(\"/api/cust_list\")\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error();\n        }\n        return res.json();\n      })\n      .then((data) => {\n        document.getElementById(\"no-cust\").style.display = \"none\";\n        ctx.dispatch({ type: \"setCustList\", payload: data.list });\n      })\n      .catch(\n        (err) => (document.getElementById(\"no-cust\").style.display = \"block\")\n      );\n  };\n\n  useEffect(() => {\n    fetchCustList();\n  }, []);\n\n  const fetchAddressList = (e, id) => {\n    e.preventDefault();\n    if (ctx.selectedCust !== \"\") {\n      document.getElementById(ctx.selectedCust).style.backgroundColor =\n        \"inherit\";\n      document.getElementById(ctx.selectedCust).style.color = \"black\";\n    }\n\n    ctx.dispatch({\n      type: \"setAddress\",\n      payload: { cust_id: id },\n    });\n\n    ctx.dispatch({\n      type: \"setSelectedCust\",\n      payload: e.target.parentNode.id,\n    });\n\n    document.getElementById(e.target.parentNode.id).style.backgroundColor =\n      \"#222222\";\n    document.getElementById(e.target.parentNode.id).style.color = \"white\";\n\n    fetch(\"/api/\" + id + \"/addresses\")\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error();\n        }\n        return res.json();\n      })\n      .then((data) => {\n        document.getElementById(\"no-add\").style.display = \"none\";\n        ctx.dispatch({ type: \"setAddressList\", payload: data.list });\n      })\n      .catch((err) => {\n        ctx.dispatch({ type: \"setAddressList\", payload: [] });\n        document.getElementById(\"no-add\").style.display = \"block\";\n      });\n  };\n\n  return (\n    <div id=\"main\">\n      <div id=\"header\">\n        <h1>High Space task</h1>\n      </div>\n      <div id=\"cust_list\">\n        <div id=\"head\">\n          <h2>Customer List</h2>\n          <button\n            onClick={() =>\n              ctx.dispatch({ type: \"setAddCustModal\", payload: true })\n            }\n          >\n            Add Customer\n          </button>\n        </div>\n\n        <ul>\n          <li>\n            <span>\n              <strong>Sr.No.</strong>{\" \"}\n            </span>\n            <span>\n              <strong>Cust Id</strong>{\" \"}\n            </span>\n            <span>\n              <strong>Name</strong>{\" \"}\n            </span>\n            <span>\n              <strong>Age</strong>{\" \"}\n            </span>\n            <span>\n              <strong>Sex</strong>{\" \"}\n            </span>\n          </li>\n          <h3 style={{ display: \"none\" }} id=\"no-cust\">\n            No Customers, Please add some\n          </h3>\n          {ctx.custList.map((cust, index) => (\n            <li\n              key={index}\n              onClick={(e) => fetchAddressList(e, cust._id)}\n              id={index}\n            >\n              <span>{index + 1}</span>\n              <span>{cust.cust_id}</span>\n              <span>{cust.f_name + \" \" + cust.l_name}</span>\n              <span>{cust.age}</span>\n              <span>{cust.sex}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div id=\"address_list\">\n        <div id=\"head\">\n          <h2>Address List of Customer</h2>\n          <button\n            onClick={() =>\n              ctx.dispatch({ type: \"setAddAddressModal\", payload: true })\n            }\n            disabled={ctx.address.cust_id !== \"\" ? false : true}\n          >\n            Add Address For {Number(ctx.selectedCust) + 1}\n          </button>\n        </div>\n        <ul>\n          <li>\n            <span>\n              <strong>Sr. No.</strong>{\" \"}\n            </span>\n            <span>\n              <strong>House No.</strong>{\" \"}\n            </span>\n            <span>\n              <strong>Street No.</strong>{\" \"}\n            </span>\n            <span>\n              <strong>City</strong>{\" \"}\n            </span>\n            <span>\n              <strong>State</strong>{\" \"}\n            </span>\n          </li>\n          {ctx.selectedCust === \"\" && <h3>Please select customer...</h3>}\n          <h3 style={{ display: \"none\" }} id=\"no-add\">\n            No Addresses for this customer, Please add some\n          </h3>\n          {ctx.addressList.map((address, index) => (\n            <li key={address._id}>\n              <span>{index + 1}</span>\n              <span>{address.h_no}</span>\n              <span>{address.s_no}</span>\n              <span>{address.city}</span>\n              <span>{address.state}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <AddCust fetchCustList={fetchCustList} />\n      <AddAddress />\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ContextProvider } from \"./components/Context\";\nimport LandingPage from \"./components/landingPage\";\n\nfunction App() {\n  return (\n    <Router>\n      <ContextProvider>\n        <Switch>\n          <Route path=\"/\" exact component={LandingPage} />\n        </Switch>\n      </ContextProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}